using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;

public class Kata
{
  public static string TicTacToeWinner(string board)
  {
    
    ArrayList theX = new ArrayList();
    ArrayList theO = new ArrayList();
    bool moreX = false;
    bool moreO = false;
    var theSpots = new[] {"1a", "1b", "1c", "pipe", "2a", "2b", "2c", "pipe2", "3a", "3b", "3c"};
    int i = 0;
    int j = 0;
    int k = 0;
    
    for(i = 0; i < board.Length; i++) {
      if(board[i] == 'x') { theX.Add(theSpots[i]); }
      if(board[i] == 'o') { theO.Add(theSpots[i]); }    
    }
    
    String[] xArray1 = new String[theX.Count];
    String[] oArray1 = new String[theO.Count];
    
    theX.CopyTo(xArray1);
    theO.CopyTo(oArray1);    
    
    // explicit conversion or missing cast
    //char[] xArray = xArray1.ToCharArray();
    //char[] oArray = oArray1.ToCharArray();
    
    char[] xArray = Array.ConvertAll(xArray1, new Converter<string, char>(StringToChar));
    char[] oArray = Array.ConvertAll(oArray1, new Converter<string, char>(StringToChar));
    
   // SORTING CHARS IN ARRAY
    xArray.Sort();
    oArray.Sort();
    
    for(j = 0; j < xArray.Length-2; j++) {
      if(xArray[j] == xArray[j+1] && xArray[j+1] == xArray[j+2]) { moreX = true; }
    }
    
    for(k = 0; k < oArray.Length-2; j++) {
      if(oArray[k] == oArray[k+1] && oArray[k+1] == oArray[k+2]) { moreO = true; }
    }
    
    if(moreX && moreO) { return "Game is a tie"; }
    if(moreX) { return "Player X is the winner"; }
    if(moreO) { return "Player O is the winner"; }
    else { return "Game is a tie"; }
    
  }
}