using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;

public class Kata
{
  public static string TicTacToeWinner(string board)
  {
    
    ArrayList theX = new ArrayList();
    ArrayList theO = new ArrayList();
    bool moreX = false;
    bool moreO = false;
    char[,] theSpots = new char[11,2] { {'1', 'a'}, {'1', 'b'}, {'1', 'c'}, {'p', 'p'}, {'2', 'a'}, {'2', 'b'}, {'2', 'c'}, {'p', 'p'}, {'3', 'a'}, {'3', 'b'}, {'3', 'c'}};
    int i = 0;
    int j = 0;
    int k = 0;
    
    for(i = 0; i < board.Length; i++) {
      if(board[i] == 'x') { theX.Add(theSpots[i,0]); theX.Add(theSpots[i,1]); }
      if(board[i] == 'o') { theO.Add(theSpots[i,0]); theO.Add(theSpots[i,1]); }    
    }
    
    char[] xArray = new char[theX.Count];
    char[] oArray = new char[theO.Count];
    
    theX.CopyTo(xArray);
    theO.CopyTo(oArray);    

    
   // SORTING CHARS IN ARRAY
    Array.Sort(xArray);
    Array.Sort(oArray);
    
    for(j = 0; j < xArray.Length-2; j++) {
      if(xArray[j] == xArray[j+1] && xArray[j+1] == xArray[j+2]) { moreX = true; }
    }
    
    for(k = 0; k < oArray.Length-2; j++) {
      if(oArray[k] == oArray[k+1] && oArray[k+1] == oArray[k+2]) { moreO = true; }
    }
    
    if(moreX && moreO) { return "Game is a tie"; }
    if(moreX) { return "Player X is the winner"; }
    if(moreO) { return "Player O is the winner"; }
    else { return "Game is a tie"; }
    
  }
}